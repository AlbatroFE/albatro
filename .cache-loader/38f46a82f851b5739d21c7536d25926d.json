{"remainingRequest":"/Users/yangxiaoming/AlbatroFE/albatro/build/md-loader/index.js!/Users/yangxiaoming/AlbatroFE/albatro/examples/docs/en-US/i18n.md","dependencies":[{"path":"/Users/yangxiaoming/AlbatroFE/albatro/examples/docs/en-US/i18n.md","mtime":1569052744394},{"path":"/Users/yangxiaoming/AlbatroFE/albatro/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yangxiaoming/AlbatroFE/albatro/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yangxiaoming/AlbatroFE/albatro/build/md-loader/index.js","mtime":1569120900877}],"contextDependencies":[],"result":["\n    <template>\n      <section class=\"content element-doc\">\n        <h2 id=\"internationalization-improving\"><a class=\"header-anchor\" href=\"#internationalization-improving\" aria-hidden=\"true\">¶</a> Internationalization (Improving)</h2>\n<!-- ## Internationalization\n\nThe default language of Element is Chinese. If you wish to use another language, you'll need to do some i18n configuration. In your entry file, if you are importing Element entirely:\n\n```javascript\nimport Vue from \"vue\"\nimport Element from \"element-ui\"\nimport locale from \"element-ui/lib/locale/lang/en\"\n\nVue.use(Element, { locale })\n```\n\nOr if you are importing Element on demand:\n\n```javascript\nimport Vue from \"vue\"\nimport { Button, Select } from \"element-ui\"\nimport lang from \"element-ui/lib/locale/lang/en\"\nimport locale from \"element-ui/lib/locale\"\n\n// configure language\nlocale.use(lang)\n\n// import components\nVue.component(Button.name, Button)\nVue.component(Select.name, Select)\n```\n\nThe Chinese language pack is imported by default, even if you're using another language. But with `NormalModuleReplacementPlugin` provided by webpack you can replace default locale:\n\nwebpack.config.js\n```javascript\n{\n  plugins: [\n    new webpack.NormalModuleReplacementPlugin(/element-ui[\\/\\\\]lib[\\/\\\\]locale[\\/\\\\]lang[\\/\\\\]zh-CN/, 'element-ui/lib/locale/lang/en')\n  ]\n}\n```\n\n## Compatible with `vue-i18n@5.x`\n\nElement is compatible with [vue-i18n@5.x](https://github.com/kazupon/vue-i18n), which makes multilingual switching even easier.\n\n```javascript\nimport Vue from \"vue\"\nimport VueI18n from \"vue-i18n\"\nimport Element from \"element-ui\"\nimport enLocale from \"element-ui/lib/locale/lang/en\"\nimport zhLocale from \"element-ui/lib/locale/lang/zh-CN\"\n\nVue.use(VueI18n)\nVue.use(Element)\n\nVue.config.lang = \"zh-cn\"\nVue.locale(\"zh-cn\", zhLocale)\nVue.locale(\"en\", enLocale)\n```\n\n## Compatible with other i18n plugins\nElement may not be compatible with i18n plugins other than vue-i18n, but you can customize how Element processes i18n.\n\n```javascript\nimport Vue from \"vue\"\nimport Element from \"element-ui\"\nimport enLocale from \"element-ui/lib/locale/lang/en\"\nimport zhLocale from \"element-ui/lib/locale/lang/zh-CN\"\n\nVue.use(Element, {\n  i18n: function (path, options) {\n    // ...\n  }\n})\n```\n\n## Compatible with `vue-i18n@6.x`\n\nYou need to manually handle it for compatibility with `6.x`.\n\n```javascript\nimport Vue from \"vue\"\nimport Element from \"element-ui\"\nimport VueI18n from \"vue-i18n\"\nimport enLocale from \"element-ui/lib/locale/lang/en\"\nimport zhLocale from \"element-ui/lib/locale/lang/zh-CN\"\n\nVue.use(VueI18n)\n\nconst messages = {\n  en: {\n    message: \"hello\",\n    ...enLocale // Or use `Object.assign({ message: \"hello\" }, enLocale)`\n  },\n  zh: {\n    message: \"你好\",\n    ...zhLocale // Or use `Object.assign({ message: \"你好\" }, zhLocale)`\n  }\n}\n// Create VueI18n instance with options\nconst i18n = new VueI18n({\n  locale: \"en\", // set locale\n  messages, // set locale messages\n})\n\nVue.use(Element, {\n  i18n: (key, value) => i18n.t(key, value)\n})\n\nnew Vue({ i18n }).$mount(\"#app\")\n```\n\n## Custom i18n in on-demand components\n\n```js\nimport Vue from \"vue\"\nimport DatePicker from \"element/lib/date-picker\"\nimport VueI18n from \"vue-i18n\"\n\nimport enLocale from \"element-ui/lib/locale/lang/en\"\nimport zhLocale from \"element-ui/lib/locale/lang/zh-CN\"\nimport ElementLocale from \"element-ui/lib/locale\"\n\nVue.use(VueI18n)\nVue.use(DatePicker)\n\nconst messages = {\n  en: {\n    message: \"hello\",\n    ...enLocale\n  },\n  zh: {\n    message: \"你好\",\n    ...zhLocale\n  }\n}\n// Create VueI18n instance with options\nconst i18n = new VueI18n({\n  locale: \"en\", // set locale\n  messages, // set locale messages\n})\n\nElementLocale.i18n((key, value) => i18n.t(key, value))\n```\n\n## Import via CDN\n\n```html\n<script src=\"//unpkg.com/vue\"></script>\n<script src=\"//unpkg.com/element-ui\"></script>\n<script src=\"//unpkg.com/element-ui/lib/umd/locale/en.js\"></script>\n\n<script>\n  ELEMENT.locale(ELEMENT.lang.en)\n</script>\n```\n\nCompatible with `vue-i18n`\n\n```html\n<script src=\"//unpkg.com/vue\"></script>\n<script src=\"//unpkg.com/vue-i18n/dist/vue-i18n.js\"></script>\n<script src=\"//unpkg.com/element-ui\"></script>\n<script src=\"//unpkg.com/element-ui/lib/umd/locale/zh-CN.js\"></script>\n<script src=\"//unpkg.com/element-ui/lib/umd/locale/en.js\"></script>\n\n<script>\n  Vue.locale(\"en\", ELEMENT.lang.en)\n  Vue.locale(\"zh-cn\", ELEMENT.lang.zhCN)\n</script>\n```\n\nCurrently Element ships with the following languages:\n<ul class=\"language-list\">\n  <li>Simplified Chinese (zh-CN)</li>\n  <li>English (en)</li>\n  <li>German (de)</li>\n  <li>Portuguese (pt)</li>\n  <li>Spanish (es)</li>\n  <li>Danish (da)</li>\n  <li>French (fr)</li>\n  <li>Norwegian (nb-NO)</li>\n  <li>Traditional Chinese (zh-TW)</li>\n  <li>Italian (it)</li>\n  <li>Korean (ko)</li>\n  <li>Japanese (ja)</li>\n  <li>Dutch (nl)</li>\n  <li>Vietnamese (vi)</li>\n  <li>Russian (ru-RU)</li>\n  <li>Turkish (tr-TR)</li>\n  <li>Brazilian Portuguese (pt-br)</li>\n  <li>Farsi (fa)</li>\n  <li>Thai (th)</li>\n  <li>Indonesian (id)</li>\n  <li>Bulgarian (bg)</li>\n  <li>Polish (pl)</li>\n  <li>Finnish (fi)</li>\n  <li>Swedish (sv-SE)</li>\n  <li>Greek (el)</li>\n  <li>Slovak (sk)</li>\n  <li>Catalunya (ca)</li>\n  <li>Czech (cs-CZ)</li>\n  <li>Ukrainian (ua)</li>\n  <li>Turkmen (tk)</li>\n  <li>Tamil (ta)</li>\n  <li>Latvian (lv)</li>\n  <li>Afrikaans (af-ZA)</li>\n  <li>Estonian (ee)</li>\n  <li>Slovenian (sl)</li>\n  <li>Arabic (ar)</li>\n  <li>Hebrew (he)</li>\n  <li>Lithuanian (lt)</li>\n  <li>Mongolian (mn)</li>\n  <li>Kazakh (kz)</li>\n  <li>Hungarian (hu)</li>\n  <li>Romanian (ro)</li>\n  <li>Kurdish (ku)</li>\n  <li>Uighur (ug-CN)</li>\n  <li>Khmer (km)</li>\n  <li>Serbian (sr)</li>\n  <li>Basque (eu)</li>\n  <li>Kyrgyz (kg)</li>\n  <li>Armenian (hy)</li>\n  <li>Croatian (hr)</li>\n  <li>Esperanto (eo)</li>\n</ul>\n\nIf your target language is not included, you are more than welcome to contribute: just add another language config [here](https://github.com/ElemeFE/element/tree/dev/src/locale/lang) and create a pull request. -->\n\n      </section>\n    </template>\n    \n  "]}