{"remainingRequest":"/Users/yangxiaoming/AlbatroFE/albatro/build/md-loader/index.js!/Users/yangxiaoming/AlbatroFE/albatro/examples/docs/en-US/quickstart.md","dependencies":[{"path":"/Users/yangxiaoming/AlbatroFE/albatro/examples/docs/en-US/quickstart.md","mtime":1569063425601},{"path":"/Users/yangxiaoming/AlbatroFE/albatro/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yangxiaoming/AlbatroFE/albatro/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yangxiaoming/AlbatroFE/albatro/build/md-loader/index.js","mtime":1569120900877}],"contextDependencies":[],"result":["\n    <template>\n      <section class=\"content element-doc\">\n        <h2 id=\"quick-start\"><a class=\"header-anchor\" href=\"#quick-start\" aria-hidden=\"true\">¶</a> Quick start</h2>\n<p>This part walks you through the process of using Albatro in a webpack project.</p>\n<!-- ### Use vue-cli@3\n\nWe provide an [Element plugin](https://github.com/AlbatroUI/vue-cli-plugin-element) for vue-cli@3, which you can use to quickly build an Element-based project. -->\n<!-- ### Use Starter Kit\n\nWe provide a general [project template](https://github.com/AlbatroUI/element-starter) for you. For Laravel users, we also have a [template](https://github.com/AlbatroUI/element-in-laravel-starter). You can download and use them directly.\n\nIf you prefer not to use them, please read the following. -->\n<h3 id=\"import-albatro\"><a class=\"header-anchor\" href=\"#import-albatro\" aria-hidden=\"true\">¶</a> Import Albatro</h3>\n<p>You can import Albatro entirely, or just import what you need. Let's start with fully import.</p>\n<h4 id=\"fully-import\"><a class=\"header-anchor\" href=\"#fully-import\" aria-hidden=\"true\">¶</a> Fully import</h4>\n<p>In main.js:</p>\n<pre><code class=\"language-javascript\">import Vue from &quot;vue&quot;;\nimport AlbatroUI from &quot;albatro-ui&quot;;\nimport &quot;albatro-ui/lib/theme-albatro/index.css&quot;;\nimport App from &quot;./App.vue&quot;;\n\nVue.use(AlbatroUI);\n\nnew Vue({\n  el: '#app',\n  render: h =&gt; h(App)\n});\n</code></pre>\n<p>The above imports Albatro entirely. Note that CSS file needs to be imported separately.</p>\n<h4 id=\"on-demand\"><a class=\"header-anchor\" href=\"#on-demand\" aria-hidden=\"true\">¶</a> On demand</h4>\n<p>With the help of <a href=\"https://github.com/QingWei-Li/babel-plugin-component\">babel-plugin-component</a>, we can import components we actually need, making the project smaller than otherwise.</p>\n<p>First, install babel-plugin-component:</p>\n<pre><code class=\"language-bash\">npm install babel-plugin-component -D\n</code></pre>\n<p>Then edit .babelrc:</p>\n<pre><code class=\"language-json\">{\n  &quot;presets&quot;: [[&quot;es2015&quot;, { &quot;modules&quot;: false }]],\n  &quot;plugins&quot;: [\n    [\n      &quot;component&quot;,\n      {\n        &quot;libraryName&quot;: &quot;albatro-ui&quot;,\n        &quot;styleLibraryName&quot;: &quot;theme-albatro&quot;\n      }\n    ]\n  ]\n}\n</code></pre>\n<p>Next, if you need Button and SuperForm, edit main.js:</p>\n<pre><code class=\"language-javascript\">import Vue from &quot;vue&quot;;\nimport { Button, SuperForm } from &quot;albatro-ui&quot;;\nimport App from &quot;./App.vue&quot;;\n\nVue.component(Button.name, Button);\nVue.component(SuperForm.name, SuperForm);\n/* or\n * Vue.use(Button)\n * Vue.use(SuperForm)\n */\n\nnew Vue({\n  el: '#app',\n  render: h =&gt; h(App)\n});\n</code></pre>\n<p>Full example (Component list reference <a href=\"https://github.com/AlbatroFE/albatro/blob/master/components.json\">components.json</a>)</p>\n<pre><code class=\"language-javascript\">import Vue from &quot;vue&quot;;\nimport {\n  Button,\n  SuperForm\n} from &quot;albatro-ui&quot;;\n\nVue.use(Button);\nVue.use(SuperForm);\n\n</code></pre>\n<h3 id=\"global-config\"><a class=\"header-anchor\" href=\"#global-config\" aria-hidden=\"true\">¶</a> Global config</h3>\n<p>When importing Albatro, you can define a global config object. For now this object has two properties: <code>size</code> and <code>zIndex</code>. The property <code>size</code> sets the default size for all components and the property <code>zIndex</code> sets the initial z-index (default: 2000) for modal boxes:</p>\n<p>Fully import Albatro</p>\n<pre><code class=\"language-js\">import Vue from &quot;vue&quot;;\nimport Albatro from &quot;albatro-ui&quot;;\nVue.use(Albatro, { size: 'small', zIndex: 3000 });\n</code></pre>\n<p>Partial import Albatro</p>\n<pre><code class=\"language-js\">import Vue from &quot;vue&quot;;\nimport { Button } from &quot;albatro-ui&quot;;\n\nVue.prototype.$ALBATRO = { size: 'small', zIndex: 3000 };\nVue.use(Button);\n</code></pre>\n<p>With the above config, the default size of all components that have size attribute will be 'small', and the initial z-index of modal boxes is 3000.</p>\n<h3 id=\"start-coding\"><a class=\"header-anchor\" href=\"#start-coding\" aria-hidden=\"true\">¶</a> Start coding</h3>\n<p>Now you have implemented Vue and Albatro to your project, and it's time to write your code. Please refer to each component's documentation to learn how to use them.</p>\n<!-- ### Use Nuxt.js\n\nWe can also start a project using [Nuxt.js](https://nuxtjs.org/):\n\n<div class=\"glitch-embed-wrap\" style=\"height: 420px; width: 100%;\">\n  <iframe src=\"https://glitch.com/embed/#!/embed/nuxt-with-element?path=nuxt.config.js&previewSize=0&attributionHidden=true\" alt=\"nuxt-with-element on glitch\" style=\"height: 100%; width: 100%; border: 0;\"></iframe>\n</div> -->\n\n      </section>\n    </template>\n    \n  "]}