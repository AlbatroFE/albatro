{"remainingRequest":"/Users/yangxiaoming/AlbatroFE/albatro/build/md-loader/index.js!/Users/yangxiaoming/AlbatroFE/albatro/examples/docs/zh-CN/quickstart.md?vue&type=template&id=3dd271a7&","dependencies":[{"path":"/Users/yangxiaoming/AlbatroFE/albatro/examples/docs/zh-CN/quickstart.md","mtime":1569045088302},{"path":"/Users/yangxiaoming/AlbatroFE/albatro/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yangxiaoming/AlbatroFE/albatro/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/yangxiaoming/AlbatroFE/albatro/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yangxiaoming/AlbatroFE/albatro/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yangxiaoming/AlbatroFE/albatro/build/md-loader/index.js","mtime":1569120900877}],"contextDependencies":[],"result":["\n    <template>\n      <section class=\"content element-doc\">\n        <h2 id=\"kuai-su-shang-shou\"><a class=\"header-anchor\" href=\"#kuai-su-shang-shou\" aria-hidden=\"true\">¶</a> 快速上手</h2>\n<p>本节将介绍如何在项目中使用 Albatro。</p>\n<!-- ### 使用 vue-cli@3\n\n我们为新版的 vue-cli 准备了相应的 [Albatro 插件](https://github.com/AlbatroUI/vue-cli-plugin-albatro)，你可以用它们快速地搭建一个基于 Albatro 的项目。 -->\n<!-- ### 使用 Starter Kit\n\n我们提供了通用的[项目模板](https://github.com/AlbatroUI/albatro-starter)，你可以直接使用。对于 Laravel 用户，我们也准备了相应的[模板](https://github.com/AlbatroUI/albatro-in-laravel-starter)，同样可以直接下载使用。\n\n如果不希望使用我们提供的模板，请继续阅读。 -->\n<h3 id=\"yin-ru-albatro\"><a class=\"header-anchor\" href=\"#yin-ru-albatro\" aria-hidden=\"true\">¶</a> 引入 Albatro</h3>\n<p>你可以引入整个 Albatro，或是根据需要仅引入部分组件。我们先介绍如何引入完整的 Albatro。</p>\n<h4 id=\"wan-zheng-yin-ru\"><a class=\"header-anchor\" href=\"#wan-zheng-yin-ru\" aria-hidden=\"true\">¶</a> 完整引入</h4>\n<p>在 main.js 中写入以下内容：</p>\n<pre><code class=\"language-javascript\">import Vue from &quot;vue&quot;;\nimport AlbatroUI from &quot;albatro-ui&quot;;\nimport 'albatro-ui/lib/theme-albatro/index.css';\nimport App from &quot;./App.vue&quot;;\n\nVue.use(AlbatroUI);\n\nnew Vue({\n  el: '#app',\n  render: h =&gt; h(App)\n});\n</code></pre>\n<p>以上代码便完成了 Albatro 的引入。需要注意的是，样式文件需要单独引入。</p>\n<h4 id=\"an-xu-yin-ru\"><a class=\"header-anchor\" href=\"#an-xu-yin-ru\" aria-hidden=\"true\">¶</a> 按需引入</h4>\n<p>借助 <a href=\"https://github.com/QingWei-Li/babel-plugin-component\">babel-plugin-component</a>，我们可以只引入需要的组件，以达到减小项目体积的目的。</p>\n<p>首先，安装 babel-plugin-component：</p>\n<pre><code class=\"language-bash\">npm install babel-plugin-component -D\n</code></pre>\n<p>然后，将 .babelrc 修改为：</p>\n<pre><code class=\"language-json\">{\n  &quot;presets&quot;: [[&quot;es2015&quot;, { &quot;modules&quot;: false }]],\n  &quot;plugins&quot;: [\n    [\n      &quot;component&quot;,\n      {\n        &quot;libraryName&quot;: &quot;albatro-ui&quot;,\n        &quot;styleLibraryName&quot;: &quot;theme-albatro&quot;\n      }\n    ]\n  ]\n}\n</code></pre>\n<p>接下来，如果你只希望引入部分组件，比如 Button 和 SuperForm，那么需要在 main.js 中写入以下内容：</p>\n<pre><code class=\"language-javascript\">import Vue from &quot;vue&quot;;\nimport { Button, SuperForm } from &quot;albatro-ui&quot;;\nimport App from &quot;./App.vue&quot;;\n\nVue.component(Button.name, Button);\nVue.component(SuperForm.name, SuperForm);\n/* 或写为\n * Vue.use(Button)\n * Vue.use(SuperForm)\n */\n\nnew Vue({\n  el: '#app',\n  render: h =&gt; h(App)\n});\n</code></pre>\n<p>完整组件列表和引入方式（完整组件列表以 <a href=\"https://github.com/AlbatroFE/albatro/blob/master/components.json\">components.json</a> 为准）</p>\n<pre><code class=\"language-javascript\">import Vue from &quot;vue&quot;;\nimport {\n  Button,\n  SuperForm\n} from &quot;albatro-ui&quot;;\n\nVue.use(Button);\nVue.use(SuperForm);\n</code></pre>\n<h3 id=\"quan-ju-pei-zhi\"><a class=\"header-anchor\" href=\"#quan-ju-pei-zhi\" aria-hidden=\"true\">¶</a> 全局配置</h3>\n<p>在引入 Albatro 时，可以传入一个全局配置对象。该对象目前支持 <code>size</code> 与 <code>zIndex</code> 字段。<code>size</code> 用于改变组件的默认尺寸，<code>zIndex</code> 设置弹框的初始 z-index（默认值：2000）。按照引入 Albatro 的方式，具体操作如下：</p>\n<p>完整引入 Albatro ：</p>\n<pre><code class=\"language-js\">import Vue from &quot;vue&quot;;\nimport Albatro from &quot;albatro-ui&quot;;\nVue.use(Albatro, { size: 'small', zIndex: 3000 });\n</code></pre>\n<p>按需引入 Albatro ：</p>\n<pre><code class=\"language-js\">import Vue from &quot;vue&quot;;\nimport { Button } from &quot;albatro-ui&quot;;\n\nVue.prototype.$ALBATRO = { size: 'small', zIndex: 3000 };\nVue.use(Button);\n</code></pre>\n<p>按照以上设置，项目中所有拥有 <code>size</code> 属性的组件的默认尺寸均为 'small'，弹框的初始 z-index 为 3000。</p>\n<h3 id=\"kai-shi-shi-yong\"><a class=\"header-anchor\" href=\"#kai-shi-shi-yong\" aria-hidden=\"true\">¶</a> 开始使用</h3>\n<p>至此，一个基于 Vue 和 Albatro 的开发环境已经搭建完毕，现在就可以编写代码了。各个组件的使用方法请参阅它们各自的文档。</p>\n<!-- ### 使用 Nuxt.js\n\n我们还可以使用 [Nuxt.js](https://nuxtjs.org)：\n\n<div class=\"glitch-embed-wrap\" style=\"height: 420px; width: 100%;\">\n  <iframe src=\"https://glitch.com/embed/#!/embed/nuxt-with-albatro?path=nuxt.config.js&previewSize=0&attributionHidden=true\" alt=\"nuxt-with-albatro on glitch\" style=\"height: 100%; width: 100%; border: 0;\"></iframe>\n</div> -->\n\n      </section>\n    </template>\n    \n  "]}